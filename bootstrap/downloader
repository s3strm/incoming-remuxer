#!/usr/bin/env bash
function usage() {
  echo "$(basename "$0") <file_on_ftp>" >&2
}

function file_exists() {
  # file exists on the FTP server
  file=$1
  curl "ftp://${FTP_USERNAME}:${FTP_PASSWORD}@${FTP_HOSTNAME}${FTP_PATH}" 2> /dev/null \
    | grep "${file}" &> /dev/null
  return $?
}

function log() {
  echo "$@"
}

function download() {
  file=$1
  log "Downloading ${file} from FTP"
  wget \
    "ftp://${FTP_USERNAME}:${FTP_PASSWORD}@${FTP_HOSTNAME}${FTP_PATH}${file}" \
    -O "/tmp/${file}"
}

function upload() {
  file=$1
  log "Uploading ${file} to S3"
  aws s3 cp "/tmp/${file}" "s3://${MOVIES_BUCKET}/incoming/${file}"
}

function delete() {
  file=$1
  log "Deleting ${file} from FTP"
  lftp \
    "ftp://${FTP_USERNAME}:${FTP_PASSWORD}@${FTP_HOSTNAME}${FTP_PATH}" \
     -e "rm ${file}; exit"
}

function cleanup() {
  file=$1
  log "Deleting /tmp/${file}"
  rm -f "/tmp/${file}"
}

###############################################################################

[[ $# -ne 1 ]] && usage && exit 1

file=$1
trap '{ cleanup ${file}; }' EXIT

if file_exists "${file}"; then
  download "${file}" || exit 1
  upload "${file}" || exit 1
  delete "${file}"
fi

exit 0
